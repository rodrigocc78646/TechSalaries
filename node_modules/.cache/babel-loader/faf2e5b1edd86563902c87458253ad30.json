{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodrigo.carvalho\\\\Desktop\\\\Websites\\\\react-d3js-example\\\\src\\\\components\\\\Controls\\\\index.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport ControlRow from './ControlRow';\n\nclass Controls extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      yearFilter: () => true,\n      year: '*'\n    };\n  }\n\n  updateYearFilter(year, reset) {\n    let filter = d => d.submit_date.getFullYear() === year;\n\n    if (reset || !year) {\n      filter = () => true;\n\n      year = '*';\n    }\n\n    this.setState({\n      yearFilter: filter,\n      year: year\n    });\n  }\n\n  componentDidUpdate() {\n    this.reportUpdateUpTheChain();\n  }\n\n  reportUpdateUpTheChain() {\n    this.props.updateDataFilter((filters => {\n      return d => filters.yearFilter(d);\n    })(this.state), {\n      year: this.state.year\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state, nextState);\n  }\n\n  render() {\n    const data = this.props.data;\n    const years = new Set(data.map(d => d.submit_date.getFullYear()));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ControlRow, {\n      data: data,\n      toggleNames: Array.from(years.values()),\n      picked: this.state.year,\n      updateDataFilter: this.updateYearFilter.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Controls;","map":{"version":3,"sources":["C:\\Users\\rodrigo.carvalho\\Desktop\\Websites\\react-d3js-example\\src\\components\\Controls\\index.js"],"names":["React","Component","_","ControlRow","Controls","state","yearFilter","year","updateYearFilter","reset","filter","d","submit_date","getFullYear","setState","componentDidUpdate","reportUpdateUpTheChain","props","updateDataFilter","filters","shouldComponentUpdate","nextProps","nextState","isEqual","render","data","years","Set","map","Array","from","values","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BI,KAD6B,GACrB;AACJC,MAAAA,UAAU,EAAE,MAAM,IADd;AAEJC,MAAAA,IAAI,EAAE;AAFF,KADqB;AAAA;;AAM7BC,EAAAA,gBAAgB,CAACD,IAAD,EAAOE,KAAP,EAAc;AAC1B,QAAIC,MAAM,GAAIC,CAAD,IAAOA,CAAC,CAACC,WAAF,CAAcC,WAAd,OAAgCN,IAApD;;AACA,QAAIE,KAAK,IAAI,CAACF,IAAd,EAAoB;AAChBG,MAAAA,MAAM,GAAG,MAAM,IAAf;;AACAH,MAAAA,IAAI,GAAG,GAAP;AACH;;AACD,SAAKO,QAAL,CAAc;AACVR,MAAAA,UAAU,EAAEI,MADF;AAEVH,MAAAA,IAAI,EAAEA;AAFI,KAAd;AAIH;;AAEDQ,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,sBAAL;AACH;;AAEDA,EAAAA,sBAAsB,GAAG;AACrB,SAAKC,KAAL,CAAWC,gBAAX,CACI,CAAEC,OAAD,IAAa;AAAC,aAAQR,CAAD,IAAOQ,OAAO,CAACb,UAAR,CAAmBK,CAAnB,CAAd;AAAqC,KAApD,EAAsD,KAAKN,KAA3D,CADJ,EAEI;AAACE,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAAlB,KAFJ;AAIH;;AAEDa,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,WAAO,CAACpB,CAAC,CAACqB,OAAF,CAAU,KAAKlB,KAAf,EAAsBiB,SAAtB,CAAR;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKR,KAAL,CAAWQ,IAAxB;AACA,UAAMC,KAAK,GAAG,IAAIC,GAAJ,CAAQF,IAAI,CAACG,GAAL,CAASjB,CAAC,IAAIA,CAAC,CAACC,WAAF,CAAcC,WAAd,EAAd,CAAR,CAAd;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEY,IAAlB;AACY,MAAA,WAAW,EAAII,KAAK,CAACC,IAAN,CAAWJ,KAAK,CAACK,MAAN,EAAX,CAD3B;AAEY,MAAA,MAAM,EAAI,KAAK1B,KAAL,CAAWE,IAFjC;AAGY,MAAA,gBAAgB,EAAI,KAAKC,gBAAL,CAAsBwB,IAAtB,CAA2B,IAA3B,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AA5C4B;;AA+CjC,eAAe5B,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport ControlRow from './ControlRow';\r\n\r\nclass Controls extends Component {\r\n    state = {\r\n        yearFilter: () => true,\r\n        year: '*'\r\n    }\r\n\r\n    updateYearFilter(year, reset) {\r\n        let filter = (d) => d.submit_date.getFullYear() === year;\r\n        if (reset || !year) {\r\n            filter = () => true;\r\n            year = '*';\r\n        }\r\n        this.setState({\r\n            yearFilter: filter,\r\n            year: year\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.reportUpdateUpTheChain()\r\n    }\r\n\r\n    reportUpdateUpTheChain() {\r\n        this.props.updateDataFilter(\r\n            ((filters) => {return (d) => filters.yearFilter(d);})(this.state),\r\n            {year: this.state.year}\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !_.isEqual(this.state, nextState);\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n        const years = new Set(data.map(d => d.submit_date.getFullYear()));\r\n        return (\r\n            <div>\r\n                <ControlRow data={data}\r\n                            toggleNames = {Array.from(years.values())}\r\n                            picked = {this.state.year}\r\n                            updateDataFilter = {this.updateYearFilter.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controls;"]},"metadata":{},"sourceType":"module"}