{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rodrigo.carvalho\\\\Desktop\\\\Websites\\\\react-d3js-example\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rodrigo.carvalho\\\\Desktop\\\\Websites\\\\react-d3js-example\\\\src\\\\components\\\\Controls\\\\index.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport ControlRow from './ControlRow';\n\nclass Controls extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      yearFilter: () => true,\n      jobTitleFilter: () => true,\n      USstateFilter: () => true,\n      year: '*',\n      USstate: '*',\n      jobTitle: '*'\n    };\n  }\n\n  componentDidMount() {\n    let _window$location$hash = window.location.hash.replace('#', '').split(\"-\"),\n        _window$location$hash2 = _slicedToArray(_window$location$hash, 3),\n        year = _window$location$hash2[0],\n        USstate = _window$location$hash2[1],\n        jobTitle = _window$location$hash2[2];\n\n    if (year !== '*' && year) {\n      this.updateYearFilter(Number(year));\n    }\n\n    if (USstate !== '*' && USstate) {\n      this.updateUSstateFilter(USstate);\n    }\n\n    if (jobTitle !== '*' && jobTitle) {\n      this.updateJobTitleFilter(jobTitle);\n    }\n  }\n\n  updateYearFilter(year, reset) {\n    let filter = d => d.submit_date.getFullYear() === year;\n\n    if (reset || !year) {\n      filter = () => true;\n\n      year = '*';\n    }\n\n    this.setState({\n      yearFilter: filter,\n      year: year\n    });\n  }\n\n  updateJobTitleFilter(title, reset) {\n    let filter = d => d.clean_job_title === title;\n\n    if (reset || !title) {\n      filter = () => true;\n\n      title = '*';\n    }\n\n    this.setState({\n      jobTitleFilter: filter,\n      jobTitle: title\n    });\n  }\n\n  updateUSstateFilter(USstate, reset) {\n    let filter = d => d.USstate === USstate;\n\n    if (reset || !USstate) {\n      filter = () => true;\n\n      USstate = '*';\n    }\n\n    this.setState({\n      USstateFilter: filter,\n      USstate: USstate\n    });\n  }\n\n  componentDidUpdate() {\n    window.location.hash = [this.state.year || '*', this.state.USstate || '*', this.state.jobTitle || '*'].join(\"-\");\n    this.reportUpdateUpTheChain();\n  }\n\n  reportUpdateUpTheChain() {\n    this.props.updateDataFilter((filters => {\n      return d => filters.yearFilter(d) && filters.jobTitleFilter(d) && filters.USstateFilter(d);\n    })(this.state), {\n      USstate: this.state.USstate,\n      year: this.state.year,\n      jobTitle: this.state.jobTitle\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state, nextState);\n  }\n\n  render() {\n    const data = this.props.data;\n    const years = new Set(data.map(d => d.submit_date.getFullYear())),\n          jobTitles = new Set(data.map(d => d.clean_job_title)),\n          USstates = new Set(data.map(d => d.USstate));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ControlRow, {\n      data: data,\n      toggleNames: Array.from(years.values()),\n      picked: this.state.year,\n      updateDataFilter: this.updateYearFilter.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(ControlRow, {\n      data: data,\n      toggleNames: Array.from(jobTitles.values()),\n      picked: this.state.jobTitle,\n      updateDataFilter: this.updateJobTitleFilter.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(ControlRow, {\n      data: data,\n      toggleNames: Array.from(USstates.values()),\n      picked: this.state.USstate,\n      updateDataFilter: this.updateUSstateFilter.bind(this),\n      capitalize: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Controls;","map":{"version":3,"sources":["C:\\Users\\rodrigo.carvalho\\Desktop\\Websites\\react-d3js-example\\src\\components\\Controls\\index.js"],"names":["React","Component","_","ControlRow","Controls","state","yearFilter","jobTitleFilter","USstateFilter","year","USstate","jobTitle","componentDidMount","window","location","hash","replace","split","updateYearFilter","Number","updateUSstateFilter","updateJobTitleFilter","reset","filter","d","submit_date","getFullYear","setState","title","clean_job_title","componentDidUpdate","join","reportUpdateUpTheChain","props","updateDataFilter","filters","shouldComponentUpdate","nextProps","nextState","isEqual","render","data","years","Set","map","jobTitles","USstates","Array","from","values","bind"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BI,KAD6B,GACrB;AACJC,MAAAA,UAAU,EAAE,MAAM,IADd;AAEJC,MAAAA,cAAc,EAAE,MAAM,IAFlB;AAGJC,MAAAA,aAAa,EAAE,MAAM,IAHjB;AAIJC,MAAAA,IAAI,EAAE,GAJF;AAKJC,MAAAA,OAAO,EAAE,GALL;AAMJC,MAAAA,QAAQ,EAAE;AANN,KADqB;AAAA;;AAU7BC,EAAAA,iBAAiB,GAAG;AAAA,gCACgBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,GAA7B,EAAkC,EAAlC,EAAsCC,KAAtC,CAA4C,GAA5C,CADhB;AAAA;AAAA,QACXR,IADW;AAAA,QACLC,OADK;AAAA,QACIC,QADJ;;AAGhB,QAAIF,IAAI,KAAK,GAAT,IAAgBA,IAApB,EAA0B;AACtB,WAAKS,gBAAL,CAAsBC,MAAM,CAACV,IAAD,CAA5B;AACH;;AACD,QAAIC,OAAO,KAAK,GAAZ,IAAmBA,OAAvB,EAAgC;AAC5B,WAAKU,mBAAL,CAAyBV,OAAzB;AACH;;AACD,QAAIC,QAAQ,KAAK,GAAb,IAAoBA,QAAxB,EAAkC;AAC9B,WAAKU,oBAAL,CAA0BV,QAA1B;AACH;AACJ;;AAEDO,EAAAA,gBAAgB,CAACT,IAAD,EAAOa,KAAP,EAAc;AAC1B,QAAIC,MAAM,GAAIC,CAAD,IAAOA,CAAC,CAACC,WAAF,CAAcC,WAAd,OAAgCjB,IAApD;;AAEA,QAAIa,KAAK,IAAI,CAACb,IAAd,EAAoB;AAChBc,MAAAA,MAAM,GAAG,MAAM,IAAf;;AACAd,MAAAA,IAAI,GAAG,GAAP;AACH;;AAED,SAAKkB,QAAL,CAAc;AACVrB,MAAAA,UAAU,EAAEiB,MADF;AAEVd,MAAAA,IAAI,EAAEA;AAFI,KAAd;AAIH;;AAEDY,EAAAA,oBAAoB,CAACO,KAAD,EAAQN,KAAR,EAAe;AAC/B,QAAIC,MAAM,GAAIC,CAAD,IAAOA,CAAC,CAACK,eAAF,KAAsBD,KAA1C;;AAEA,QAAIN,KAAK,IAAI,CAACM,KAAd,EAAqB;AACjBL,MAAAA,MAAM,GAAG,MAAM,IAAf;;AACAK,MAAAA,KAAK,GAAG,GAAR;AACH;;AAED,SAAKD,QAAL,CAAc;AACVpB,MAAAA,cAAc,EAAEgB,MADN;AAEVZ,MAAAA,QAAQ,EAAEiB;AAFA,KAAd;AAIH;;AAEDR,EAAAA,mBAAmB,CAACV,OAAD,EAAUY,KAAV,EAAiB;AAChC,QAAIC,MAAM,GAAIC,CAAD,IAAOA,CAAC,CAACd,OAAF,KAAcA,OAAlC;;AAEA,QAAIY,KAAK,IAAI,CAACZ,OAAd,EAAuB;AACnBa,MAAAA,MAAM,GAAG,MAAM,IAAf;;AACAb,MAAAA,OAAO,GAAG,GAAV;AACH;;AAED,SAAKiB,QAAL,CAAc;AACVnB,MAAAA,aAAa,EAAEe,MADL;AAEVb,MAAAA,OAAO,EAAEA;AAFC,KAAd;AAIH;;AAEDoB,EAAAA,kBAAkB,GAAG;AACjBjB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,CAAC,KAAKV,KAAL,CAAWI,IAAX,IAAmB,GAApB,EACvB,KAAKJ,KAAL,CAAWK,OAAX,IAAsB,GADC,EAEvB,KAAKL,KAAL,CAAWM,QAAX,IAAuB,GAFA,EAEKoB,IAFL,CAEU,GAFV,CAAvB;AAIA,SAAKC,sBAAL;AACH;;AAEDA,EAAAA,sBAAsB,GAAG;AACrB,SAAKC,KAAL,CAAWC,gBAAX,CACI,CAAEC,OAAD,IAAa;AACV,aAAQX,CAAD,IAAOW,OAAO,CAAC7B,UAAR,CAAmBkB,CAAnB,KACPW,OAAO,CAAC5B,cAAR,CAAuBiB,CAAvB,CADO,IAEPW,OAAO,CAAC3B,aAAR,CAAsBgB,CAAtB,CAFP;AAGH,KAJD,EAIG,KAAKnB,KAJR,CADJ,EAMI;AACIK,MAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK,OADxB;AAEID,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAFrB;AAGIE,MAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM;AAHzB,KANJ;AAYH;;AAEDyB,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,WAAO,CAACpC,CAAC,CAACqC,OAAF,CAAU,KAAKlC,KAAf,EAAsBiC,SAAtB,CAAR;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKR,KAAL,CAAWQ,IAAxB;AAEA,UAAMC,KAAK,GAAG,IAAIC,GAAJ,CAAQF,IAAI,CAACG,GAAL,CAASpB,CAAC,IAAIA,CAAC,CAACC,WAAF,CAAcC,WAAd,EAAd,CAAR,CAAd;AAAA,UACImB,SAAS,GAAG,IAAIF,GAAJ,CAAQF,IAAI,CAACG,GAAL,CAASpB,CAAC,IAAIA,CAAC,CAACK,eAAhB,CAAR,CADhB;AAAA,UAEIiB,QAAQ,GAAG,IAAIH,GAAJ,CAAQF,IAAI,CAACG,GAAL,CAASpB,CAAC,IAAIA,CAAC,CAACd,OAAhB,CAAR,CAFf;AAIA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE+B,IAAlB;AACI,MAAA,WAAW,EAAEM,KAAK,CAACC,IAAN,CAAWN,KAAK,CAACO,MAAN,EAAX,CADjB;AAEI,MAAA,MAAM,EAAE,KAAK5C,KAAL,CAAWI,IAFvB;AAGI,MAAA,gBAAgB,EAAE,KAAKS,gBAAL,CAAsBgC,IAAtB,CAA2B,IAA3B,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAET,IAAlB;AACI,MAAA,WAAW,EAAEM,KAAK,CAACC,IAAN,CAAWH,SAAS,CAACI,MAAV,EAAX,CADjB;AAEI,MAAA,MAAM,EAAE,KAAK5C,KAAL,CAAWM,QAFvB;AAGI,MAAA,gBAAgB,EAAE,KAAKU,oBAAL,CAA0B6B,IAA1B,CAA+B,IAA/B,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAWI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAET,IAAlB;AACI,MAAA,WAAW,EAAEM,KAAK,CAACC,IAAN,CAAWF,QAAQ,CAACG,MAAT,EAAX,CADjB;AAEI,MAAA,MAAM,EAAE,KAAK5C,KAAL,CAAWK,OAFvB;AAGI,MAAA,gBAAgB,EAAE,KAAKU,mBAAL,CAAyB8B,IAAzB,CAA8B,IAA9B,CAHtB;AAII,MAAA,UAAU,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAmBH;;AAvH4B;;AA0HjC,eAAe9C,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport ControlRow from './ControlRow';\r\n\r\nclass Controls extends Component {\r\n    state = {\r\n        yearFilter: () => true,\r\n        jobTitleFilter: () => true,\r\n        USstateFilter: () => true,\r\n        year: '*',\r\n        USstate: '*',\r\n        jobTitle: '*'\r\n    };\r\n\r\n    componentDidMount() {\r\n        let [year, USstate, jobTitle] = window.location.hash.replace('#', '').split(\"-\");\r\n\r\n        if (year !== '*' && year) {\r\n            this.updateYearFilter(Number(year));\r\n        }\r\n        if (USstate !== '*' && USstate) {\r\n            this.updateUSstateFilter(USstate);\r\n        }\r\n        if (jobTitle !== '*' && jobTitle) {\r\n            this.updateJobTitleFilter(jobTitle);\r\n        }\r\n    }\r\n\r\n    updateYearFilter(year, reset) {\r\n        let filter = (d) => d.submit_date.getFullYear() === year;\r\n\r\n        if (reset || !year) {\r\n            filter = () => true;\r\n            year = '*';\r\n        }\r\n\r\n        this.setState({\r\n            yearFilter: filter,\r\n            year: year\r\n        });\r\n    }\r\n\r\n    updateJobTitleFilter(title, reset) {\r\n        let filter = (d) => d.clean_job_title === title;\r\n\r\n        if (reset || !title) {\r\n            filter = () => true;\r\n            title = '*';\r\n        }\r\n\r\n        this.setState({\r\n            jobTitleFilter: filter,\r\n            jobTitle: title\r\n        });\r\n    }\r\n\r\n    updateUSstateFilter(USstate, reset) {\r\n        let filter = (d) => d.USstate === USstate;\r\n\r\n        if (reset || !USstate) {\r\n            filter = () => true;\r\n            USstate = '*';\r\n        }\r\n\r\n        this.setState({\r\n            USstateFilter: filter,\r\n            USstate: USstate\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.location.hash = [this.state.year || '*',\r\n        this.state.USstate || '*',\r\n        this.state.jobTitle || '*'].join(\"-\");\r\n\r\n        this.reportUpdateUpTheChain();\r\n    }\r\n\r\n    reportUpdateUpTheChain() {\r\n        this.props.updateDataFilter(\r\n            ((filters) => {\r\n                return (d) => filters.yearFilter(d)\r\n                    && filters.jobTitleFilter(d)\r\n                    && filters.USstateFilter(d);\r\n            })(this.state),\r\n            {\r\n                USstate: this.state.USstate,\r\n                year: this.state.year,\r\n                jobTitle: this.state.jobTitle\r\n            }\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !_.isEqual(this.state, nextState);\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n\r\n        const years = new Set(data.map(d => d.submit_date.getFullYear())),\r\n            jobTitles = new Set(data.map(d => d.clean_job_title)),\r\n            USstates = new Set(data.map(d => d.USstate));\r\n\r\n        return (\r\n            <div>\r\n                <ControlRow data={data}\r\n                    toggleNames={Array.from(years.values())}\r\n                    picked={this.state.year}\r\n                    updateDataFilter={this.updateYearFilter.bind(this)} />\r\n\r\n                <ControlRow data={data}\r\n                    toggleNames={Array.from(jobTitles.values())}\r\n                    picked={this.state.jobTitle}\r\n                    updateDataFilter={this.updateJobTitleFilter.bind(this)} />\r\n\r\n                <ControlRow data={data}\r\n                    toggleNames={Array.from(USstates.values())}\r\n                    picked={this.state.USstate}\r\n                    updateDataFilter={this.updateUSstateFilter.bind(this)}\r\n                    capitalize=\"true\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controls;"]},"metadata":{},"sourceType":"module"}