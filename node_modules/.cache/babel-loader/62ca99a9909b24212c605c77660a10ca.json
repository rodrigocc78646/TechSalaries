{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodrigo.carvalho\\\\Desktop\\\\Websites\\\\react-d3js-example\\\\src\\\\components\\\\CountyMap\\\\County.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\nconst CloroplethColors = _.reverse(['rgb(247,251,255)', 'rgb(222,235,247)', 'rgb(198,219,239)', 'rgb(158,202,225)', 'rgb(107,174,214)', 'rgb(66,146,198)', 'rgb(33,113,181)', 'rgb(8,81,156)', 'rgb(8,48,107)']);\n\nconst BlankColor = 'rgb(240,240,240)';\n\nclass County extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const _this$props = this.props,\n          zoom = _this$props.zoom,\n          value = _this$props.value;\n    return zoom !== nextProps.zoom || value !== nextProps.value;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          value = _this$props2.value,\n          geoPath = _this$props2.geoPath,\n          feature = _this$props2.feature,\n          quantize = _this$props2.quantize;\n    let color = BlankColor;\n\n    if (value) {\n      color = CloroplethColors[quantize(value)];\n    }\n\n    return React.createElement(\"path\", {\n      d: geoPath(feature),\n      style: {\n        fill: color\n      },\n      title: feature.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default County;","map":{"version":3,"sources":["C:\\Users\\rodrigo.carvalho\\Desktop\\Websites\\react-d3js-example\\src\\components\\CountyMap\\County.js"],"names":["React","Component","_","CloroplethColors","reverse","BlankColor","County","shouldComponentUpdate","nextProps","nextState","props","zoom","value","render","geoPath","feature","quantize","color","fill","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,gBAAgB,GAAGD,CAAC,CAACE,OAAF,CAAU,CAC/B,kBAD+B,EAE/B,kBAF+B,EAG/B,kBAH+B,EAI/B,kBAJ+B,EAK/B,kBAL+B,EAM/B,iBAN+B,EAO/B,iBAP+B,EAQ/B,eAR+B,EAS/B,eAT+B,CAAV,CAAzB;;AAYA,MAAMC,UAAU,GAAG,kBAAnB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC3BM,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAAA,wBAClB,KAAKC,KADa;AAAA,UACjCC,IADiC,eACjCA,IADiC;AAAA,UAC3BC,KAD2B,eAC3BA,KAD2B;AAExC,WAAOD,IAAI,KAAKH,SAAS,CAACG,IAAnB,IAA2BC,KAAK,KAAKJ,SAAS,CAACI,KAAtD;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACuC,KAAKH,KAD5C;AAAA,UACEE,KADF,gBACEA,KADF;AAAA,UACSE,OADT,gBACSA,OADT;AAAA,UACkBC,OADlB,gBACkBA,OADlB;AAAA,UAC2BC,QAD3B,gBAC2BA,QAD3B;AAEL,QAAIC,KAAK,GAAGZ,UAAZ;;AACA,QAAIO,KAAJ,EAAW;AACPK,MAAAA,KAAK,GAAGd,gBAAgB,CAACa,QAAQ,CAACJ,KAAD,CAAT,CAAxB;AACH;;AACD,WACI;AAAM,MAAA,CAAC,EAAEE,OAAO,CAACC,OAAD,CAAhB;AACM,MAAA,KAAK,EAAE;AAACG,QAAAA,IAAI,EAACD;AAAN,OADb;AAEM,MAAA,KAAK,EAAEF,OAAO,CAACI,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAjB0B;;AAoB/B,eAAeb,MAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst CloroplethColors = _.reverse([\r\n    'rgb(247,251,255)',\r\n    'rgb(222,235,247)',\r\n    'rgb(198,219,239)',\r\n    'rgb(158,202,225)',\r\n    'rgb(107,174,214)',\r\n    'rgb(66,146,198)',\r\n    'rgb(33,113,181)',\r\n    'rgb(8,81,156)',\r\n    'rgb(8,48,107)'\r\n]);\r\n\r\nconst BlankColor = 'rgb(240,240,240)';\r\n\r\nclass County extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {zoom, value} = this.props;\r\n        return zoom !== nextProps.zoom || value !== nextProps.value;\r\n    }\r\n\r\n    render() {\r\n        const {value, geoPath, feature, quantize} = this.props;\r\n        let color = BlankColor;\r\n        if (value) {\r\n            color = CloroplethColors[quantize(value)];\r\n        }\r\n        return (\r\n            <path d={geoPath(feature)}\r\n                  style={{fill:color}}\r\n                  title={feature.id}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default County;"]},"metadata":{},"sourceType":"module"}