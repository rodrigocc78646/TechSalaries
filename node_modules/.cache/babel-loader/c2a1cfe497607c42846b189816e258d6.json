{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodrigo.carvalho\\\\Desktop\\\\Websites\\\\react-d3js-example\\\\src\\\\components\\\\Meta\\\\Title.js\";\nimport React, { Component } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport { mean as d3mean, extent as d3extent } from 'd3-array';\nimport USStatesMap from '../USStatesMap';\n\nclass Title extends Component {\n  get yearsFragment() {\n    const year = this.props.filteredBy.year;\n    return year === '*' ? \"\" : \"in \".concat(year);\n  }\n\n  get USstateFragment() {\n    const USstate = this.props.filteredBy.USstate;\n    return USstate === '*' ? \"\" : USStatesMap[USstate.toUpperCase()];\n  }\n\n  get jobTitleFragment() {\n    const _this$props$filteredB = this.props.filteredBy,\n          jobTitle = _this$props$filteredB.jobTitle,\n          year = _this$props$filteredB.year;\n    let title = \"\";\n\n    if (jobTitle === '*') {\n      if (year === '*') {\n        title = \"The average H1B in tech pays\";\n      } else {\n        title = \"The average tech HIB paid\";\n      }\n    } else {\n      title = \"Software \".concat(jobTitle, \"s on an H1B\");\n\n      if (year === '*') {\n        title += \" make\";\n      } else {\n        title += \" made\";\n      }\n    }\n\n    return title;\n  }\n\n  get format() {\n    return scaleLinear().domain(d3extent(this.props.data, d => d.base_salary)).tickFormat();\n  }\n\n  render() {\n    const mean = this.format(d3mean(this.props.data, d => d.base_salary));\n    let title;\n\n    if (this.yearsFragment && this.USstateFragment) {\n      title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"In \", this.USstateFragment, \", \", this.jobTitleFragment, \" $\", mean, \"/year \", this.yearsFragment);\n    } else {\n      title = React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.jobTitleFragment, \" $\", mean, \"/year \", this.USstateFragment ? \"in \".concat(this.USstateFragment) : '', \" \", this.yearsFragment);\n    }\n\n    return title;\n  }\n\n}\n\nexport default Title;","map":{"version":3,"sources":["C:\\Users\\rodrigo.carvalho\\Desktop\\Websites\\react-d3js-example\\src\\components\\Meta\\Title.js"],"names":["React","Component","scaleLinear","mean","d3mean","extent","d3extent","USStatesMap","Title","yearsFragment","year","props","filteredBy","USstateFragment","USstate","toUpperCase","jobTitleFragment","jobTitle","title","format","domain","data","d","base_salary","tickFormat","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,SAAQC,IAAI,IAAIC,MAAhB,EAAwBC,MAAM,IAAIC,QAAlC,QAAiD,UAAjD;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC1B,MAAIQ,aAAJ,GAAoB;AAChB,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBF,IAAnC;AACA,WAAOA,IAAI,KAAK,GAAT,GAAe,EAAf,gBAA0BA,IAA1B,CAAP;AACH;;AAED,MAAIG,eAAJ,GAAsB;AAClB,UAAMC,OAAO,GAAG,KAAKH,KAAL,CAAWC,UAAX,CAAsBE,OAAtC;AACA,WAAOA,OAAO,KAAK,GAAZ,GAAkB,EAAlB,GAAuBP,WAAW,CAACO,OAAO,CAACC,WAAR,EAAD,CAAzC;AACH;;AAED,MAAIC,gBAAJ,GAAuB;AAAA,kCACM,KAAKL,KAAL,CAAWC,UADjB;AAAA,UACZK,QADY,yBACZA,QADY;AAAA,UACFP,IADE,yBACFA,IADE;AAEnB,QAAIQ,KAAK,GAAG,EAAZ;;AAEA,QAAID,QAAQ,KAAK,GAAjB,EAAsB;AAClB,UAAIP,IAAI,KAAK,GAAb,EAAkB;AACdQ,QAAAA,KAAK,GAAG,8BAAR;AACH,OAFD,MAGK;AACDA,QAAAA,KAAK,GAAG,2BAAR;AACH;AACJ,KAPD,MAQK;AACDA,MAAAA,KAAK,sBAAeD,QAAf,gBAAL;;AACA,UAAIP,IAAI,KAAK,GAAb,EAAkB;AACdQ,QAAAA,KAAK,IAAI,OAAT;AACH,OAFD,MAGK;AACDA,QAAAA,KAAK,IAAI,OAAT;AACH;AACJ;;AAED,WAAOA,KAAP;AACH;;AAED,MAAIC,MAAJ,GAAa;AACT,WAAOjB,WAAW,GACVkB,MADD,CACQd,QAAQ,CAAC,KAAKK,KAAL,CAAWU,IAAZ,EAAkBC,CAAC,IAAIA,CAAC,CAACC,WAAzB,CADhB,EAECC,UAFD,EAAP;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMtB,IAAI,GAAG,KAAKgB,MAAL,CAAYf,MAAM,CAAC,KAAKO,KAAL,CAAWU,IAAZ,EAAkBC,CAAC,IAAIA,CAAC,CAACC,WAAzB,CAAlB,CAAb;AACA,QAAIL,KAAJ;;AACA,QAAI,KAAKT,aAAL,IAAsB,KAAKI,eAA/B,EAAgD;AAC5CK,MAAAA,KAAK,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,KAAKL,eADb,QACgC,KAAKG,gBADrC,QACyDb,IADzD,YACqE,KAAKM,aAD1E,CADJ;AAKH,KAND,MAOK;AACDS,MAAAA,KAAK,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,gBADV,QAC8Bb,IAD9B,YAC0C,KAAKU,eAAL,gBAA6B,KAAKA,eAAlC,IAAqD,EAD/F,OACoG,KAAKJ,aADzG,CADJ;AAKH;;AACD,WAAOS,KAAP;AACH;;AA5DyB;;AA+D9B,eAAeV,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {scaleLinear} from 'd3-scale';\r\nimport {mean as d3mean, extent as d3extent} from 'd3-array';\r\n\r\nimport USStatesMap from '../USStatesMap';\r\n\r\nclass Title extends Component {\r\n    get yearsFragment() {\r\n        const year = this.props.filteredBy.year;\r\n        return year === '*' ? \"\" : `in ${year}`;\r\n    }\r\n\r\n    get USstateFragment() {\r\n        const USstate = this.props.filteredBy.USstate;\r\n        return USstate === '*' ? \"\" : USStatesMap[USstate.toUpperCase()];\r\n    }\r\n\r\n    get jobTitleFragment() {\r\n        const {jobTitle, year} = this.props.filteredBy;\r\n        let title = \"\";\r\n\r\n        if (jobTitle === '*') {\r\n            if (year === '*') {\r\n                title = \"The average H1B in tech pays\";\r\n            }\r\n            else {\r\n                title = \"The average tech HIB paid\";\r\n            }\r\n        }\r\n        else {\r\n            title = `Software ${jobTitle}s on an H1B`;\r\n            if (year === '*') {\r\n                title += \" make\";\r\n            }\r\n            else {\r\n                title += \" made\";\r\n            }\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    get format() {\r\n        return scaleLinear()\r\n               .domain(d3extent(this.props.data, d => d.base_salary))\r\n               .tickFormat();\r\n    }\r\n\r\n    render() {\r\n        const mean = this.format(d3mean(this.props.data, d => d.base_salary));\r\n        let title;\r\n        if (this.yearsFragment && this.USstateFragment) {\r\n            title = (\r\n                <h2>\r\n                    In {this.USstateFragment}, {this.jobTitleFragment} ${mean}/year {this.yearsFragment}\r\n                </h2>\r\n            );\r\n        }\r\n        else {\r\n            title = (\r\n                <h2>\r\n                    {this.jobTitleFragment} ${mean}/year {this.USstateFragment ? `in ${this.USstateFragment}`: ''} {this.yearsFragment}\r\n                </h2>\r\n            );\r\n        }\r\n        return title;\r\n    }\r\n}\r\n\r\nexport default Title;"]},"metadata":{},"sourceType":"module"}