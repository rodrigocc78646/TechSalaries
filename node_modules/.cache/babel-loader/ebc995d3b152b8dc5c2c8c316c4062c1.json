{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodrigo.carvalho\\\\Desktop\\\\Websites\\\\react-d3js-example\\\\src\\\\components\\\\Histogram\\\\Histogram.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Axis from '/.Axis';\n\nclass Histogram extends Component {\n  constructor(props) {\n    super();\n    this.histogram = d3.histogram();\n    this.widthScale = d3.scaleLinear();\n    this.yScale = d3.scaleLinear();\n    this.updateD3(props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.updateD3(newProps);\n  }\n\n  updateD3(props) {\n    this.histogram.thresholds(props.bins).value(props.value);\n    const bars = this.histogram(props.data);\n    const counts = bars.map(d => d.length);\n    this.widthScale.domain([d3.min(counts), d3.max(counts)]).range([0, props.width - props.axisMargin]);\n    this.yScale.domain([0, d3.max(bars, d => d.x1)]).range([0, props.height - props.y - props.bottomMargin]);\n  }\n\n  makeBar(bar) {\n    let percent = bar.length / this.props.data.length * 100;\n    let props = {\n      percent: percent,\n      x: this.props.axisMargin,\n      y: this.yScale(bar.x0),\n      width: this.widthScale(bar.length),\n      height: this.yScale(bar.x1 - bar.x0),\n      key: \"histogram-bar-\" + bar.x0\n    };\n    return React.createElement(HistogramBar, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const translate = \"translate(\".concat(this.props.x, \", \").concat(this.props.y, \")\");\n    const bars = this.histogram(this.props.data);\n    return React.createElement(\"g\", {\n      className: \"histogram\",\n      transform: translate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      className: \"bars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, bars.map(this.makeBar.bind(this))), React.createElement(Axis, {\n      x: this.props.axisMargin - 3,\n      y: 0,\n      data: bars,\n      scale: this.yScale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst HistogramBar = ({\n  percent,\n  x,\n  y,\n  width,\n  height\n}) => {\n  let translate = \"translate(\".concat(x, \", \").concat(y, \")\");\n  let label = percent.toFixed(0) + '%';\n\n  if (percent < 1) {\n    label = percent.toFixed(2) + \"%\";\n  }\n\n  if (width < 20) {\n    label = label.replace(\"%\", \"\");\n  }\n\n  if (width < 10) {\n    label = \"\";\n  }\n\n  return React.createElement(\"g\", {\n    transform: translate,\n    className: \"bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    width: width,\n    height: height - 2,\n    transform: \"translate(0,1)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    textAnchor: \"end\",\n    x: width - 5,\n    y: height / 2 + 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, label));\n};\n\nexport default Histogram;","map":{"version":3,"sources":["C:\\Users\\rodrigo.carvalho\\Desktop\\Websites\\react-d3js-example\\src\\components\\Histogram\\Histogram.js"],"names":["React","Component","d3","Axis","Histogram","constructor","props","histogram","widthScale","scaleLinear","yScale","updateD3","componentWillReceiveProps","newProps","thresholds","bins","value","bars","data","counts","map","d","length","domain","min","max","range","width","axisMargin","x1","height","y","bottomMargin","makeBar","bar","percent","x","x0","key","render","translate","bind","HistogramBar","label","toFixed","replace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nimport Axis from '/.Axis';\r\n\r\nclass Histogram extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.histogram = d3.histogram();\r\n        this.widthScale = d3.scaleLinear();\r\n        this.yScale = d3.scaleLinear();\r\n\r\n        this.updateD3(props);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.updateD3(newProps);\r\n    }\r\n\r\n    updateD3(props) {\r\n        this.histogram.thresholds(props.bins)\r\n                      .value(props.value);\r\n        const bars = this.histogram(props.data);\r\n        const counts = bars.map((d) => d.length);\r\n\r\n        this.widthScale.domain([d3.min(counts), d3.max(counts)])\r\n                       .range([0, props.width - props.axisMargin]);\r\n\r\n        this.yScale.domain([0, d3.max(bars, (d) => d.x1)])\r\n                   .range([0, props.height - props.y - props.bottomMargin]);\r\n    }\r\n\r\n    makeBar(bar) {\r\n        let percent = bar.length/this.props.data.length*100;\r\n        let props = {\r\n            percent: percent,\r\n            x: this.props.axisMargin,\r\n            y: this.yScale(bar.x0),\r\n            width: this.widthScale(bar.length),\r\n            height: this.yScale(bar.x1 - bar.x0),\r\n            key: \"histogram-bar-\" + bar.x0\r\n        }\r\n        return (\r\n            <HistogramBar {...props} />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const translate = `translate(${this.props.x}, ${this.props.y})`;\r\n        const bars = this.histogram(this.props.data);\r\n        return (\r\n            <g className=\"histogram\" transform={translate}>\r\n                <g className=\"bars\">\r\n                    {bars.map(this.makeBar.bind(this))}\r\n                </g>\r\n                <Axis x={this.props.axisMargin - 3}\r\n                      y={0}\r\n                      data={bars}\r\n                      scale={this.yScale} />\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nconst HistogramBar = ({percent, x, y, width, height}) => {\r\n    let translate = `translate(${x}, ${y})`;\r\n    let label = percent.toFixed(0) + '%';\r\n    if (percent < 1) {\r\n        label = percent.toFixed(2) + \"%\";\r\n    }\r\n    if (width < 20) {\r\n        label = label.replace(\"%\", \"\");\r\n    }\r\n    if (width < 10) {\r\n        label = \"\";\r\n    }\r\n\r\n    return (\r\n        <g transform={translate} className=\"bar\">\r\n            <rect width={width} height={height-2} transform=\"translate(0,1)\">\r\n            </rect>\r\n            <text textAnchor=\"end\" x={width-5} y={height/2+3}>\r\n                {label}\r\n            </text>\r\n        </g>\r\n    );\r\n}\r\n\r\nexport default Histogram;"]},"metadata":{},"sourceType":"module"}